//This is a single-population model that works out of the box with simulate_custom.py 

initialize()
{
    //remove these constants from your version since this stuff should all be set on the command line
    defineConstant("subpopSize", burnPopSize);
    defineConstant("mutLoc", asInteger(physLen/2));
    initializeMutationRate(mutationRate);
    initializeMutationType("m1", 0.5, "f", 0.0);
    initializeGenomicElementType("g1", m1, 1.0);
    initializeGenomicElement(g1, 0, physLen-1);
    initializeRecombinationRate(recombRate);
    
    defineConstant("sweepDuration", asInteger(60/Q)); 
    defineConstant("burnTime", 20*subpopSize);
    defineConstant("mutTime", burnTime);
    defineConstant("ssvTime", mutTime); 
    defineConstant("simEndTime", mutTime+sweepDuration);
    defineConstant("samplingTime", simEndTime-sweepDuration); //samplingInterval*numSamples=200
    // introduced mutation's selection coefficient
    initializeMutationType("m2", 0.5, "f", selCoeff);

    defineConstant("ssvRestartTime", mutTime-subpopSize);
    
}
s1 1000 late()
{  
    // save the state of the simulation 
    cat("SAVING TO " + dumpFile + " at generation " + sim.generation + "\n");
    p1.setSubpopulationSize(selPopSize);
    sim.outputFull(dumpFile);  
    sim.simulationFinished();
    }

1 {
    // save this run's identifier, used to save and restore
    defineConstant("simID", getSeed());
    
    // set up our subpop
    sim.addSubpop("p1", subpopSize);
    
    sim.rescheduleScriptBlock(s1, start=mutTime, end=mutTime); //  introducing sdn mut
}